#!/bin/bash

DATE=`date +"%m-%d-%y-%T"`
ROOT=`pwd`
TIMEOUT="20"
PASS_OUT=PASS
FAIL_OUT=FAIL
RESULTS_DIR="$ROOT/results"

SUBJ="$COMPILER-Testsuite validation results"
EMAIL="siddharthajana24@gmail.com"
ATTACH="$ROOT/results/uhcaf_results_$DATE.tar"
echo "Failed Logs Attached" > $ROOT/email_body.tmp

cd $RESULTS_DIR
mv *.log ./HISTORY
mv *.tar ./HISTORY
cd $ROOT

if [ ! -f $ROOT/../config/CONFIG ]; then
  echo "CONFIG file doesn't exist."
  exit 1
fi

source $ROOT/../config/CONFIG

for iter in 1 ; do
  if [ "$iter" == "1" ]; then
     echo "*******CONFORMANCE TESTS*******"
     echo "SPEC_IDX COMPILE_OP EXECUTE_OP DESCRIPTION"
     CURRENT_PATH=$ROOT/should_pass
     PASS_OUT="PASS"
     FAIL_OUT="FAIL"
     cd $CURRENT_PATH
     COMPILE_PASS_LOG="$RESULTS_DIR/$FC\_compile_pass_$DATE.log"
     EXEC_PASS_LOG="$RESULTS_DIR/$FC\_exec_pass_$DATE.log"
     COMPILE_FAIL_LOG="$RESULTS_DIR/$FC\_compile_fail_$DATE.log"
     EXEC_FAIL_LOG="$RESULTS_DIR/$FC\_exec_fail_$DATE.log"
     for temp in $COMPILE_PASS_LOG $EXEC_PASS_LOG $COMPILE_FAIL_LOG $EXEC_FAIL_LOG; do
        echo "*******CONFORMANCE TESTS*******" >> $temp
     done
  else
     echo "*******NON-CONFORMANCE TESTS*******"
     echo "SPEC_IDX COMPILE_OP EXECUTE_OP DESCRIPTION"
     CURRENT_PATH=$ROOT/should_fail
     PASS_OUT="FAIL"
     FAIL_OUT="PASS"
     cd $CURRENT_PATH
     COMPILE_PASS_LOG="$RESULTS_DIR/$FC\_compile_fail_$DATE.log"
     EXEC_PASS_LOG="$RESULTS_DIR/$FC\_exec_fail_$DATE.log"
     COMPILE_FAIL_LOG="$RESULTS_DIR/$FC\_compile_pass_$DATE.log"
     EXEC_FAIL_LOG="$RESULTS_DIR/${FC}_exec_pass_$DATE.log"
     for temp in $COMPILE_PASS_LOG $EXEC_PASS_LOG $COMPILE_FAIL_LOG $EXEC_FAIL_LOG; do
        echo "*******NON-CONFORMANCE TESTS*******" >> $temp
     done
  fi
 for file in `ls *.f90`; do
 #for file in "item_008.005.004.f90"; do
   COMPILE_STATUS="UNKNOWN"
   EXEC_STATUS="N/A"
   SPEC_IDX="`echo "$file" |sed 's/.f90//'| sed 's/item_//'`"
   DESCRIPTION="`cat description | grep "$file" | sed s/"$file"//`"

   if [ "$V" == "1" ]; then
      echo "$FC $FFLAGS $CURRENT_PATH/$file -o $ROOT/executables/$file.x 2>$CURRENT_PATH/compile_output/$file.compile.out && echo 2 || echo 3"
      echo "perl $ROOT/timedexec.pl $TIMEOUT \"$LAUNCHER $ROOT/executables/$file.x\"  2>&1 && echo 1 || echo -1"
   fi
   echo -n $SPEC_IDX
   COMPILE_OUT=`$FC $FFLAGS $CURRENT_PATH/$file -o $ROOT/executables/$file.x 2>$CURRENT_PATH/compile_output/$file.compile.out && echo 2 || echo 3`

   if [ $COMPILE_OUT -eq 2 ]; then
     COMPILE_STATUS="$PASS_OUT"
     echo -n -e "\t\t$COMPILE_STATUS"
     echo -e "$file \t $DESCRIPTION">> $COMPILE_PASS_LOG
     EXEC_OUT=`perl $ROOT/timedexec.pl $TIMEOUT "$LAUNCHER  $ROOT/executables/$file.x"  2>&1 && echo 1 || echo -1`
     if [ "$EXEC_OUT" == "-1" ]; then
         EXEC_STATUS="RUNTIME ERROR"
         echo "$file" >> $EXEC_FAIL_LOG
     else
          echo "$EXEC_OUT" >>./exec_output/$file.exec.out
          VERIFICATION=`echo "$EXEC_OUT" | grep ERROR | awk '{print $5}'`
          if [ "$VERIFICATION" == "" ]; then
             EXEC_STATUS="$PASS_OUT"
             echo -e "$file \t $DESCRIPTION" >> $EXEC_PASS_LOG
          else
             EXEC_STATUS="$FAIL_OUT"
             echo -e "$file \t $DESCRIPTION" >> $EXEC_FAIL_LOG
          fi
     fi
   else
     COMPILE_STATUS="$FAIL_OUT"
     echo -e "$file \t $DESCRIPTION" >>$COMPILE_FAIL_LOG
     echo -n -e "\t\t$COMPILE_STATUS"
   fi
   echo -e "\t\t$EXEC_STATUS \t$DESCRIPTION"
  done
  cd $ROOT
done


# Sending an email notification
tar -rf $ATTACH  $COMPILE_FAIL_LOG $EXEC_FAIL_LOG
mutt -s "$SUBJ" -a $ATTACH $EMAIL < $ROOT/email_body.tmp
rm -rf $ROOT/email_body.tmp

echo "Test completed !!!"

