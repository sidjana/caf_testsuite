=============================================================================
README for CAF Test Suite

by HPCTools Group, University of Houston
Last Modified: July 16, 2014
=============================================================================

Instructions on running the tests, explanation of the directory structures,
list of configuration parameters, snapshots of performance and validation
results of some CAF compilers (UHCAF, Cray, Intel, and G95) are all located
under:

    <testsuite>/docs/INSTRUCTIONS

where <testsuite> is either validation or performance.


===========================================
CAF Validation and Performance Test Suites
===========================================

If the tests are executed from this root directory of the test suite, then:

USAGE: make <performance|validation|clean> PARAMS=<OPTIONS> [COMPILER=uhcaf(default)|ifort|g95|crayftn]

Examples:
  make validation                                       # to see options for running validation tests
  make validation PARAMS=all COMPILER=uhcaf             # run all the validation tests
  make performance                                      # to see options for running performance tests
  make performance PARAMS=complete_all COMPILER=uhcaf   # run all the performance tests

Alternatively, you may run the validation and performances tests from the validation and performance directories, respectively.

---------------------------------------------
Options for Validation Test Suite
---------------------------------------------

(If test suite is run from within validation directory, then run: make <OPTIONS> [COMPILER=uhcaf(default)|ifort|g95|crayftn])

 OPTIONS include:
 |
 |_ all:                      all validation tests
 |_ fewtests:                 tests only those listed in the file test_file under ./few directory
 |_ feature:                  tests the compiler's feature support (excludes tests that include verification)
 |_ crosschecked_feature:     performs cross-testing to test support for non-determinism handling constructs
 |_ status:                   tests for verifying handling of status returned by certain statements
 |_ clean_<suite>:            cleans executables (where <suite> = fewtests|feature|crosschecked_feature|status)
 |_ cleanall:                 cleans everything - results, tests-history, compiler-logs, runtime-logs

Before running any <suite>, please ensure that:
 The 'user-defined' parameters are set in config/CONFIG-validation
 The compiler specific parameters in config/CONFIG-compiler.<compiler>

---------------------------------------------
Options for Performance Test Suite
---------------------------------------------

(If test suite is run from within performance directory, then run: make [<OPTIONS> [COMPILER=uhcaf(default)|ifort|g95|crayftn]])

OPTIONS include:
| ( Note: <suite> = kernels|microbenchmarks|npb|all] )
|
|_ compile_<suite>:      compiles and generates logs for the codes
|_ execute_<suite>:      executes and generates logs for the codes
|_ complete_<suite>:     executes and generates logs for the codes
|_ clean<suite>:         cleans up the logs, executables and all previous history of the regression runs

Before running any <suite>, please ensure that:
 The 'user-defined' parameters are set in config/CONFIG
 The compiler specific parameters in config/CONFIG-compiler.<compiler>

Note:

 There is no need to set the make.def* within config. They are auto-generated by the Makefiles.

 Before running any kernel tests, please ensure that the number of images (NPROCS) for every kernel is
 set in the *.def file within its directory. E.g. mm.def within kernels/src/mm sets the number of images
 to run the Matrix multiplication code


=============================================================================

