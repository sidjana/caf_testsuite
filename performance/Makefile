SHELL := /bin/bash

KERNELS_PATH=./kernels
MICROBENCH_PATH=./microbenchmarks
NPB_PATH=./NPB3.3-CAF
COMPILER?=uhcaf

help default:
	@printf '\n%10s\n' "(If test suite is run from within performance directory, then run: $(MAKE) [<OPTIONS> [COMPILER=uhcaf(default)|ifort|g95|crayftn]])"
	@printf '%10s\n' "OPTIONS include:"
	@printf '%-25s%-90s\n' "| "
	@printf '%-25s%-90s\n' "|_ compile_<suite>:" "compiles and generates logs for the codes"
	@printf '%-25s%-90s\n' "|_ execute_<suite>:" "executes and generates logs for the codes"
	@printf '%-25s%-90s\n' "|_ complete_<suite>:" "executes and generates logs for the codes"
	@printf '%-25s%-90s\n\n' "|_ clean<suite>:" "cleans up the logs, executables and all previous history of the regression runs"
	@printf '%-25s\n\n' "Note: <suite> = kernels|microbenchmarks|npb|all]"
	@echo -e "Before running any <suite>, please ensure that:\n The 'user-defined' parameters are set in config/CONFIG \n The compiler specific parameters in config/CONFIG-compiler.<compiler> \n"
	@ echo -e "Note:"
	@ echo -e "\n There is no need to set the make.def* within config. They are auto-generated by the Makefiles."
	@ echo -e "\n Before running any kernel tests, please ensure that the number of images (NPROCS) for every kernel is"
	@ echo -e " set in the *.def file within its directory."


compile_performance: compile_performance execute_performance

compile_performance compile_all: compile_kernels  compile_microbenchmarks compile_npb

compile_kernels:
	@cd $(KERNELS_PATH) ; make -s COMPILER=$(COMPILER);

compile_microbenchmarks:
	@cd $(MICROBENCH_PATH) ; make -s compile COMPILER=$(COMPILER);

compile_npb:
	@cd $(NPB_PATH); ./test_npb.sh compile $(COMPILER);

execute_performance execute_all: execute_kernels  execute_microbenchmarks execute_npb

execute_kernels:
	@cd $(KERNELS_PATH) ; make -s runtests COMPILER=$(COMPILER);

execute_microbenchmarks:
	@cd $(MICROBENCH_PATH) ; make -s execute COMPILER=$(COMPILER);

execute_npb:
	@cd $(NPB_PATH) ; ./test_npb.sh execute $(COMPILER);

complete_performance complete_all: complete_kernels  complete_microbenchmarks complete_npb

complete_kernels:
	@cd $(KERNELS_PATH) ; make -s runtests COMPILER=$(COMPILER);

complete_microbenchmarks:
	@cd $(MICROBENCH_PATH) ; make -s complete COMPILER=$(COMPILER);

complete_npb:
	@cd $(NPB_PATH) ; ./test_npb.sh complete $(COMPILER);


# CLEAN-UP

.PHONY: clean cleanall clean_kernels clean_microbenchmarks clean_npb


cleanperformance: cleankernels cleanmicrobenchmarks cleannpb
	@rm -rf  config/make.def*

cleankernels:
	$(MAKE) -C $(KERNELS_PATH) clean

cleanmicrobenchmarks:
	$(MAKE) -C $(MICROBENCH_PATH) cleanall

cleannpb:
	$(MAKE) -C $(NPB_PATH) clean

clean cleanall: cleanperformance
